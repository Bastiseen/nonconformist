Search.setIndex({envversion:46,filenames:["_autosummary/nonconformist.acp.AggregatedCp","_autosummary/nonconformist.acp.BootstrapSampler","_autosummary/nonconformist.acp.CrossSampler","_autosummary/nonconformist.acp.RandomSubSampler","_autosummary/nonconformist.evaluation.IcpClassCrossValHelper","_autosummary/nonconformist.evaluation.IcpRegCrossValHelper","_autosummary/nonconformist.evaluation.class_mean_errors","_autosummary/nonconformist.evaluation.reg_mean_errors","_autosummary/nonconformist.icp.IcpClassifier","_autosummary/nonconformist.icp.IcpRegressor","_autosummary/nonconformist.nc.ProbEstClassifierNc","_autosummary/nonconformist.nc.RegressorNc","_autosummary/nonconformist.nc.absolute_error","_autosummary/nonconformist.nc.absolute_error_inverse","_autosummary/nonconformist.nc.inverse_probability","_autosummary/nonconformist.nc.margin","_autosummary/nonconformist.nc.signed_error","_autosummary/nonconformist.nc.signed_error_inverse","api","guide/index","index"],objects:{"nonconformist.acp":{AggregatedCp:[0,7,1,""],BootstrapSampler:[1,7,1,""],CrossSampler:[2,7,1,""],RandomSubSampler:[3,7,1,""]},"nonconformist.acp.AggregatedCp":{"__init__":[0,5,1,""]},"nonconformist.acp.BootstrapSampler":{"__init__":[1,5,1,""]},"nonconformist.acp.CrossSampler":{"__init__":[2,5,1,""]},"nonconformist.acp.RandomSubSampler":{"__init__":[3,5,1,""]},"nonconformist.evaluation":{IcpClassCrossValHelper:[4,7,1,""],IcpRegCrossValHelper:[5,7,1,""],class_mean_errors:[6,6,1,""],reg_mean_errors:[7,6,1,""]},"nonconformist.evaluation.IcpClassCrossValHelper":{"__init__":[4,5,1,""]},"nonconformist.evaluation.IcpRegCrossValHelper":{"__init__":[5,5,1,""]},"nonconformist.icp":{IcpClassifier:[8,7,1,""],IcpRegressor:[9,7,1,""]},"nonconformist.icp.IcpClassifier":{"__init__":[8,5,1,""],calibrate:[8,5,1,""],fit:[8,5,1,""],get_problem_type:[8,5,1,""],predict:[8,5,1,""]},"nonconformist.icp.IcpRegressor":{"__init__":[9,5,1,""],calibrate:[9,5,1,""],fit:[9,5,1,""],get_problem_type:[9,5,1,""]},"nonconformist.nc":{ProbEstClassifierNc:[10,7,1,""],RegressorNc:[11,7,1,""],absolute_error:[12,6,1,""],absolute_error_inverse:[13,6,1,""],inverse_probability:[14,6,1,""],margin:[15,6,1,""],signed_error:[16,6,1,""],signed_error_inverse:[17,6,1,""]},"nonconformist.nc.ProbEstClassifierNc":{"__init__":[10,5,1,""],calc_nc:[10,5,1,""],fit:[10,5,1,""]},"nonconformist.nc.RegressorNc":{"__init__":[11,5,1,""],calc_nc:[11,5,1,""],fit:[11,5,1,""]},nonconformist:{acp:[18,4,0,"-"],evaluation:[18,4,0,"-"],icp:[18,4,0,"-"],nc:[18,4,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","method","Python method"],"2":["py","function","Python function"],"3":["py","class","Python class"],"4":["np","module","Python module"],"5":["np","method","Python method"],"6":["np","function","Python function"],"7":["np","class","Python class"]},objtypes:{"0":"py:module","1":"py:method","2":"py:function","3":"py:class","4":"np:module","5":"np:method","6":"np:function","7":"np:class"},terms:{"0x00000000040c9438":[],"0x00000000040cdb00":[],"0x000000000415bac8":[],"0x0000000004166d30":[],"0x00000000041c44e0":[],"0x000000000ebce5f8":[],"0x000000000ebe19e8":[],"0x000000000ec61358":[],"0x000000000ec62978":[],"0x000000000ece9208":[],"__init__":[0,1,2,3,4,5,8,9,10,11],"boolean":[8,9],"float":8,"new":[8,9],"return":[8,9,10,11,14,15],"true":[8,9,14,15],aggreg:[0,18],aggregation_func:0,allow:8,arrai:[8,9,10,11,14,15],asd:[],base:[8,9],between:8,bootstrap:1,bootstrapsampl:[],both:[8,9],calc_nc:[8,10,11],calcul:[8,10,11,14,15],calibr:[8,9],calibration_port:[3,4,5],callabl:[10,11],classifi:8,conform:[0,8,9,18],contain:[8,10,11],content:20,correct:[14,15],cp_class:0,cross:2,decid:8,defin:[14,15],denot:8,dict:[10,11],each:[8,14,15],err_func:[10,11],error:[8,15],estim:[10,11,14,15],exampl:[8,9,10,11],exist:[8,9],fals:[8,9],fit:[8,9,10,11],fold:2,get_problem_typ:[8,9],hat:[],help:[1,2],icpregressor:[],ight:[],implement:[8,10,11],includ:8,increment:[8,9],index:20,induct:[8,9,18],initi:[1,2,10,11],input:[8,9,10,11],invers:11,inverse_err_func:11,inverse_error_func:11,keyword:[10,11],label:[8,14,15],lambda:[],learn:[10,11],left:[],level:8,librari:[10,11],math:[],maximum:8,method:[0,1,2,3,4,5,8,9,10,11],model:[6,7,10,11],model_class:[10,11],model_param:[10,11],modul:20,n_class:[8,14,15],n_featur:[8,9,10,11],n_model:0,n_sampl:[8,9,10,11,14,15],nc_class:0,nc_class_param:0,nc_function:[8,9],none:[0,8,9,10,11],numpi:[8,9,10,11,14,15],object:[8,10,11],old:[8,9],option:[10,11],output:[8,9,10,11,14,15],page:20,pair:8,paramet:[8,9,10,11,14,15],partial:11,pass:[10,11],patter:8,pattern:8,perform:[8,9],pleft:[],predict:[8,11,12,13,14,15,16,17],predict_proba:10,predictor:[0,8,9,18],present:[10,11],previous:[8,9],probabl:[10,14,15],problem:[8,9],problem_typ:[8,9],random:3,rate:8,rather:8,recalibr:[8,9],regressor:9,sampl:[8,10,11,14,15],sampler:[0,1,2,3],scikit:[10,11],score:[10,11,14,15],scorer:[8,9,10,11],search:20,see:[1,2],set:[8,9,10,11],shape:[8,9,10,11,14,15],should:[8,10,11],signatur:[1,2,10,11],signific:[4,5,8,13,17],simpl:[],smooth:8,stochast:8,string:[8,9],subsampl:3,suppli:[8,9],test:8,than:8,type:[1,2,8,9],underli:[8,9,10,11],upon:[10,11],valu:8,where:[],whether:8,which:[8,10,11],y_i:[]},titles:["<code class=\"docutils literal\"><span class=\"pre\">nonconformist.acp</span></code>.AggregatedCp","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.acp</span></code>.BootstrapSampler","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.acp</span></code>.CrossSampler","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.acp</span></code>.RandomSubSampler","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.evaluation</span></code>.IcpClassCrossValHelper","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.evaluation</span></code>.IcpRegCrossValHelper","nonconformist.evaluation.class_mean_errors","nonconformist.evaluation.reg_mean_errors","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.icp</span></code>.IcpClassifier","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.icp</span></code>.IcpRegressor","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.nc</span></code>.ProbEstClassifierNc","<code class=\"docutils literal\"><span class=\"pre\">nonconformist.nc</span></code>.RegressorNc","nonconformist.nc.absolute_error","nonconformist.nc.absolute_error_inverse","nonconformist.nc.inverse_probability","nonconformist.nc.margin","nonconformist.nc.signed_error","nonconformist.nc.signed_error_inverse","nonconformist API","nonconformist Guide","nonconformist 0.1 documentation"],titleterms:{"class":18,"function":[18,19],absolute_error:12,absolute_error_invers:13,acp:[0,1,2,3,18],aggregatedcp:0,api:18,bootstrapsampl:1,class_mean_error:6,classif:19,crosssampl:2,document:20,evalu:[4,5,6,7,18,19],guid:19,icp:[8,9,18],icpclasscrossvalhelp:4,icpclassifi:8,icpregcrossvalhelp:5,icpregressor:9,indic:20,inverse_prob:14,margin:15,nonconform:19,nonconformist:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20],probestclassifiernc:10,randomsubsampl:3,reg_mean_error:7,regress:19,regressornc:11,signed_error:16,signed_error_invers:17,tabl:20}})